Q1.Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

###		SELECT * FROM (SELECT CITY, LENGTH(CITY) FROM STATION ORDER BY LENGTH(CITY), CITY) WHERE ROWNUM = 1;
SELECT * FROM (SELECT CITY, LENGTH(CITY) FROM STATION ORDER BY LENGTH(CITY) DESC, CITY) WHERE ROWNUM = 1;

Q2.Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.

	##SELECT DISTINCT CITY FROM STATION WHERE REGEXP_LIKE(CITY,'^[aeiou]','i');

Q3.Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

****SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTR(CITY,LENGTH(CITY),1)) IN ('a','e','i','o','u');

q4.Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.
		
select distinct CITY from STATION where substr(UPPER(CITY),1,1) in ('A','E','I','O','U') and substr(UPPER(CITY),-1,1) in ('A','E','I','O','U');
 
Q5.Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

###select distinct city from station where substr(lower(city),1,1) not IN ('a','e','i','o','u');


Q6.Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

#### SELECT NAME FROM STUDENTS WHERE MARKS>75 ORDER BY(SUBSTR(NAME,-3,3));
 
Q7.Write a query identifying the type of each record in the TRIANGLES table using its three side lengths. Output one of the following statements for each record in the table:

Equilateral: It's a triangle with  sides of equal length.
Isosceles: It's a triangle with  sides of equal length.
Scalene: It's a triangle with  sides of differing lengths.
Not A Triangle: The given values of A, B, and C don't form a triangle

ANSWER:;:::::SELECT CASE 
WHEN A + B > C THEN CASE WHEN A = B AND B = C THEN 'Equilateral' WHEN A = B OR B = C OR A = C THEN 'Isosceles' WHEN A != B OR B != C OR A != C THEN 'Scalene' END 
ELSE 'Not A Triangle' END FROM TRIANGLES;



Q8.Query an alphabetically ordered list of all names in OCCUPATIONS, immediately followed by the first letter of each profession as a parenthetical (i.e.: enclosed in parentheses). For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S).

select name||'('||substr(occupation,1,1)||')'
from occupations
order by name ;
select 'There are a total of '||count(*)||' '||lower(occupation)||'s.' from occupations
group by occupation


Q9. list all the prime numbers whithin 1000;
	
	SELECT LISTAGG(prime_number,',') WITHIN GROUP (ORDER BY prime_number) AS NUMBERS
	FROM(    
    	select l prime_number
	from (select level l from dual connect by level <= 1000)
	, (select level m from dual connect by level <= 1000)
	where m<=l
	group by l
	having count(case l/m when trunc(l/m) then 'Y' end) = 2);
order by count(*),occupation ;