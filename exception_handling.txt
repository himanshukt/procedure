declare 
a number :=&a;
b number :=&b;
c number;
begin
	c :=a/b;
	dbms_output.put_line('division value'||c);
exception 
	when zero_divide then dbms_output.put_line('divison bby zero impossible..');
end;




DECLARE  
ENO EMP.EMPNO%TYPE:=0900;
NAM EMP.ENAME%TYPE;
BAS EMP.SAL%TYPE;
BEGIN
SELECT ENAME,SAL INTO NAM,BAS FROM EMP
	WHERE EMPNO=ENO;
	IF BAS>=5000 THEN
	DBMS_OUTPUT.PUT_LINE('GOOD SAL');
	ELSE
	DBMS_OUTPUT.PUT_LINE('INC NEEDED');
END  IF;
exception
when NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO RECORDS FOUND');

END;



---------MUL EXCEPTION--------------------
DECLARE  
ENO EMP.EMPNO%TYPE:=7900;
NAM EMP.ENAME%TYPE;
BAS EMP.SAL%TYPE;
BEGIN
SELECT ENAME,SAL INTO NAM,BAS FROM EMP
	WHERE EMPNO=ENO;
	IF BAS>=5000 THEN
	DBMS_OUTPUT.PUT_LINE('GOOD SAL');
	ELSE
	DBMS_OUTPUT.PUT_LINE('INC NEEDED');
END  IF;
exception

when NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO RECORDS FOUND');

WHEN TOO_MANY_ROWS THEN
DBMS_OUTPUT.PUT_LINE('NO RECORDS FOUND');
END;

--EMPLOY---

DECLARE 
ENO EMPLOY.EMPLOY%TYPE:=&ENO;
NAM EMPLOY.NAME%TYPE:='&NAM';
DPT EMPLOY.DEPT%TYPE:='&DPT';
DSG EMPLOY.DESIG%TYPE:='&DSG';
BAS EMPLOY.BASIC%TYPE:=&BAS;
BEGIN 
INSERT INTO EMPLOY VALUES (ENO,NAM,DPT,DSG,BAS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
DBMS_OUTPUT.PUT_LINE('EMP NO EXISTS....');
END;



-------CUSTOM EXCEPTION---------------

DECLARE
N NUMBER(5):=&N;
M NUMBER(5):=&M;
P NUMBER(5);
FLAG NUMBER;
NEGATIVEEXCEPTION EXCEPTION;
NUMBERZEROEXCEPTION EXCEPTION;
BEGIN
FLAG:=1;
IF N<0 OR M<0 THEN FLAG:=0;
RAISE NEGATIVEEXCEPTION;
END IF;
IF N=0 OR M=0 THEN FLAG:=0;
RAISE NUMBERZEROEXCEPTION;
END IF;
IF FLAG=1 THEN P:=N+M;
DBMS_OUTPUT.PUT_LINE('SUM IS '|| P);
END IF;
EXCEPTION
WHEN NEGATIVEEXCEPTION THEN
DBMS_OUTPUT.PUT_LINE('NEGATIVE NOS NOT ALLOWED');
WHEN NUMBERZEROEXCEPTION THEN

DBMS_OUTPUT.PUT_LINE('ZERO NOT ALLOWED');
END;
-----------CO-RELATED QUERY-------------






